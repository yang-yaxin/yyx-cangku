<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.PersonnelMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Personnel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="pho" property="pho" jdbcType="BIGINT" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="feedback" property="feedback" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, job, pho, source, feedback, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_personnel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_personnel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Personnel" >
    insert into t_personnel (id, name, job, 
      pho, source, feedback, 
      status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{pho,jdbcType=BIGINT}, #{source,jdbcType=VARCHAR}, #{feedback,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Personnel" >
    insert into t_personnel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="pho != null" >
        pho,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="feedback != null" >
        feedback,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="pho != null" >
        #{pho,jdbcType=BIGINT},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Personnel" >
    update t_personnel
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="pho != null" >
        pho = #{pho,jdbcType=BIGINT},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        feedback = #{feedback,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Personnel" >
    update t_personnel
    set name = #{name,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      pho = #{pho,jdbcType=BIGINT},
      source = #{source,jdbcType=VARCHAR},
      feedback = #{feedback,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="count" resultType="java.lang.Long">
    select count(*) from t_personnel
    <include refid="contractSql"></include>

  </select>

  <select id="personnelList" resultType="Contract" >
    <bind name="key_off" value="(currPage - 1)*pageSize"/>
    select * from t_personnel

    limit ${key_off},${pageSize}
  </select>
</mapper>
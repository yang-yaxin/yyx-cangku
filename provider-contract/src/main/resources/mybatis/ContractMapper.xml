<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Contract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contract_no" property="contractNo" jdbcType="INTEGER" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="person_id" property="personId" jdbcType="INTEGER" />
    <result column="effective_date" property="effectiveDate" jdbcType="DATE" />
    <result column="expiration_date" property="expirationDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contract_no, contract_name, contract_type, person_id, effective_date, expiration_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Contract" >
    insert into t_contract (id, contract_no, contract_name, 
      contract_type, person_id, effective_date, 
      expiration_date)
    values (#{id,jdbcType=INTEGER}, #{contractNo,jdbcType=INTEGER}, #{contractName,jdbcType=VARCHAR}, 
      #{contractType,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{effectiveDate,jdbcType=DATE}, 
      #{expirationDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Contract" >
    insert into t_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="contractName != null" >
        contract_name,
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="effectiveDate != null" >
        effective_date,
      </if>
      <if test="expirationDate != null" >
        expiration_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=INTEGER},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="effectiveDate != null" >
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="expirationDate != null" >
        #{expirationDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Contract" >
    update t_contract
    <set >
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=INTEGER},
      </if>
      <if test="contractName != null" >
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="effectiveDate != null" >
        effective_date = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="expirationDate != null" >
        expiration_date = #{expirationDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Contract" >
    update t_contract
    set contract_no = #{contractNo,jdbcType=INTEGER},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      effective_date = #{effectiveDate,jdbcType=DATE},
      expiration_date = #{expirationDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="count" resultType="java.lang.Long">
    select count(*) from t_contract
    <include refid="contractSql"></include>

  </select>

  <select id="ContractList" resultType="Contract" >
    <bind name="key_off" value="(currPage - 1)*pageSize"/>
    select * from t_contract c left join contract_type t on c.contract_type=t.type_id left join t_person p on c.person_id=p.sid
    <include refid="contractSql"></include>
    limit ${key_off},${pageSize}
  </select>
  <sql id="contractSql">
    <where>
      <if test="contract.contractName!=null and contract.contractName!=''">
         and contract_name like'%${contract.contractName}%'
      </if>
    </where>
  </sql>
</mapper>